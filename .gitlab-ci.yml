build-maven-project:
  stage: build
  tags:
    - actiare
  script:
    - cd BackendCrud
    - mvn clean install
    - mvn package
    - cd ../Authentification
    - mvn clean install
    - mvn package

#ddggy



build-angular-project:
  stage: build
  tags:
    - actiare
  script:
    - cd Front
    - npm install





Junit_Tests:
  stage: test
  tags:
    - actiare

  script:
    - cd BackendCrud
    - mvn test
  artifacts:
    reports:
      junit:
        - BackendCrud/target/surefire-reports/TEST-com.RHActia.actia_app.Services.EmployeeServiceTest.xml
        - BackendCrud/target/surefire-reports/TEST-com.RHActia.actia_app.Services.TeamServiceTest.xml



#eehyjcduxojjcxfovu

karma_tests:
  stage: test
  tags:
    - actiare
  before_script:
    - nvm install 20.11.1
    - nvm use 20.11.1
  script:
    - whoami
    - cd Front
    - npm install
    - tsc --version
    - ng test
  artifacts:
    reports:
      junit: junit_reports/test-results.xml


sonarqube_spring:
  stage: test
  tags:
    - actiare
  script:
    - cd BackendCrud
    - mvn --batch-mode verify sonar:sonar -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
    - cd ../Authentification
    - mvn --batch-mode verify sonar:sonar -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
  needs:
    - build-maven-project
    - Junit_Tests



sonarqube_angular:
  stage: test
  tags:
    - actiare
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  before_script:
    - cp Front/sonar-project.properties .
  script:
    - sonar-scanner -X  -Dsonar.projectBaseDir=Front -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD




push_backend_docker_img:
  stage: deploy
  tags:
    - actiare
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
    - docker build -t ranou98/actia_backcrud BackendCrud
    - docker push ranou98/actia_backcrud


#push_frontend_docker_img:
#  stage: deploy
#  tags:
#    - actiare
#  script:
#    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
#    - docker build -t ranou98/actia_front Front
#    - docker push ranou98/actia_front
#docker_compose:
#  stage: deploy
#  tags:
#    - actiare
#  script:
#    docker compose up -d
#  needs:
#
#    - push_frontend_docker_img
#    - push_backend_docker_img
