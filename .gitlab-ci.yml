build-maven-project:
  stage: build
  tags:
    - actia
  script:
    - cd Backend
    - mvn clean install -X

build-artifact:
  stage: build
  tags:
    - actia
  script:
    - mvn package
  artifacts:
    paths:
      - target/backend.jar

build-angular-project:
  stage: build
  tags:
    - actia
  script:
    - cd Front
    - npm install --force
sonarqube_spring:
  stage: test
  tags:
    - actia
  script:
    - mvn --batch-mode verify sonar:sonar -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD
  needs:

    - build-maven-project


sonarqube_angular:
  stage: test
  tags:
    - actia
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  before_script:
    - cp Front/sonar-project.properties .
  script:
    - sonar-scanner -X  -Dsonar.projectBaseDir=Front -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD




push_backend_docker_img:
  stage: deploy
  tags:
    - actia
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
    - docker build -t ranou98/actia_back Backend
    - docker push ranou98/actia_back
  needs:

    - build-angular-project



push_frontend_docker_img:
  stage: deploy
  tags:
    - actia
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
    - docker build -t ranou98/actia_front Front
    - docker push ranou98/actia_front
docker_compose:
  stage: deploy
  tags:
    - actia
  script:
    docker compose up -d
